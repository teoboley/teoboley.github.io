// shadows
@mixin shadow-heavy {
	box-shadow: 0px 6px 10px 3px rgba(0,0,0,0.79);
}

@mixin shadow-light {
	box-shadow: 0px 4px 10px 0px rgba(0,0,0,0.2);
}

// links
@mixin link-effect-strong($highlightColor) {
	position: relative;
	display: inline-block;
	outline: none;
	text-decoration: none;
	overflow: hidden;

	span {
		position: relative;
		display: inline-block;
		transition: transform 0.3s;
	}

	span::before {
		position: absolute;
		top: 100%;
		content: attr(data-hover);
		color: $highlightColor;
		font-weight: 800;
		transform: translate3d(0,0,0);
	}

	&:hover span,
	&:focus span {
		transform: translateY(-100%);
	}
}

@mixin link-effect-weak($baseColor, $highlightColor) {
	position: relative;
	display: inline-block;
	color: $baseColor;
	outline: none;
	text-decoration: none;
	transition: color 0.3s, opacity 0.3s, transform 0.3s;

	&:hover {
		color: $highlightColor;
	}

	&::after {
		position: absolute;
		top: 100%;
		left: 0;
		right: 0;
		margin: 0 auto;
		width: 0%;
		height: 1px;

		background: $baseColor;
		content: '';
		opacity: 0;
		transition: height 0.3s, background 0.3s, width 0.3s, opacity 0.3s;
	}

	&:hover::after,
	&:focus::after {
		background: $highlightColor;
		height: 0.1em;
		width: 100%;
		opacity: 1;
	}
}

// pseudo 3d text effect
@mixin text-effect($direction, $color) {
	$multiplier: 1;

	@if $direction == left {
		$multiplier: -1;
	}

	text-shadow: $multiplier*0.1em 0px rgba($color, 0.7), $multiplier*0.28em 0px rgba($color, 0.1);
}

@mixin centerer($horizontal: true, $vertical: true) {
	position: absolute;
	@if ($horizontal and $vertical) {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	} @else if ($horizontal) {
		left: 50%;
		transform: translate(-50%, 0);
	} @else if ($vertical) {
		top: 50%;
		transform: translate(0, -50%);
	}
}

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
	@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
	eot: "?",
	svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
	otf: "opentype",
	ttf: "truetype"
  );

  @each $ext in $exts {
	$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
	$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
	$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
	font-family: quote($name);
	font-style: $style;
	font-weight: $weight;
	src: $src;
  }
}